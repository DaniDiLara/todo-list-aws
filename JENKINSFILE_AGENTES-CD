pipeline {
    agent none

    environment {
        AWS_REGION = 'us-east-1'
        STACK_NAME = 'todo-app-staging-production'
        S3_BUCKET = 'aws-sam-cli-managed-default-samclisourcebucket-3jhja3mam3li'
        USUARIO_GITHUB = 'DaniDiLara'
        REPO = 'todo-list-aws'
    }

    stages {
        stage('Get Code') {
            agent { label 'dani' }
            steps {
                sh '''
                    echo "Ejecutando en nodo: $(hostname)"
                    echo "Usuario: $(whoami)"
                '''
                cleanWs()
                git branch: 'master', url: 'https://github.com/DaniDiLara/todo-list-aws.git'

                stash name: 'fuente', includes: '**/*'
            }
        }

        stage('Deploy') {
            agent { label 'dani' }
            steps {
                unstash 'fuente'
                sh '''
                    echo "Ejecutando en nodo: $(hostname)"
                    echo "Usuario: $(whoami)"
                    sam build
                    sam deploy --stack-name $STACK_NAME --s3-bucket $S3_BUCKET --region $AWS_REGION --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides Stage=production
                '''
                script {
                    env.BASE_URL = sh(
                        script: """
                            aws cloudformation describe-stacks \
                              --stack-name ${STACK_NAME} \
                              --query "Stacks[0].Outputs[?OutputKey=='BaseUrlApi'].OutputValue" \
                              --region ${AWS_REGION} --output text
                        """,
                        returnStdout: true
                    ).trim()
                    echo "Base URL obtenida: ${env.BASE_URL}"
                }
                stash name: 'fuente', includes: '**/*'
            }
        }

        stage('Rest Test') {
            agent { label 'agente2' }
            steps {
                unstash 'fuente'
                sh '''
                    echo "Ejecutando en nodo: $(hostname)"
                    echo "Usuario: $(whoami)"
                    export BASE_URL
                    python3 -m pytest -k "get or list" test/integration/todoApiTest.py || exit 1
                '''
                stash name: 'fuente', includes: '**/*'
            }
        }
    }
}
